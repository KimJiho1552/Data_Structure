#pragma once
//단순 연결 리스트의 노드 구조를 구조체로 정의
typedef struct ListNode {
	char data[4];
	struct ListNode* link;
} listNode;

//리스트 시작을 나타내는 head 노드를 구조체로 정의
typedef struct {
	listNode* head;
} linkedList_h;

linkedList_h* createLinkedList_h(void);
void freeLinkedList_h(linkedList_h* L);
void printList(linkedList_h* L);
void insertFirstNode(linkedList_h* L, char* x);
void insertMiddleNode(linkedList_h* L, listNode* pre, char* x);
void insertLastNode(linkedList_h* L, char* x);
void deleteNode(linkedList_h* L, listNode* p);
listNode* searchNode(linkedList_h* L, char* x);
void reverse(linkedList_h* L);

/*
//--------------------------------더블 포인터--------------------------------------

typedef struct ListNode {
	char data[4];
	struct ListNode* link;
} listNode;

void freeLinkedList_h(listNode* L);
void printList(listNode** L);
void insertFirstNode(listNode** L, char* x);
void insertMiddleNode(listNode** L, listNode* pre, char* x);
void insertLastNode(listNode** L, char* x);
void deleteNode(listNode** L, listNode* p);
listNode* searchNode(listNode** L, char* x);
void reverse(listNode** L);
*/